<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>Détails du groupe</title>
</head>
<body>
    <h1>Détails du groupe</h1>
    <p><a href="/accueil">⬅ Retour à l'accueil</a></p>

    <div id="group-info">Chargement des infos...</div>
    <div id="group-role"></div>
    <div id="group-members"></div>

    <!-- Création de dépense -->
    {# <h3>Créer une nouvelle dépense</h3>
    <input type="text" id="expense-title" placeholder="Titre">
    <input type="number" id="expense-amount" placeholder="Montant">
    <input type="date" id="expense-date">
    <input type="text" id="expense-category" placeholder="Catégorie">
    <input type="text" id="expense-users" placeholder="IDs des utilisateurs concernés (ex: 1,2)">
    <button id="create-expense">Créer la dépense</button>
    <p id="expense-result"></p> #}

    <h3>Créer une nouvelle dépense</h3>
    <form id="expense-form" enctype="multipart/form-data">
        <input type="text" id="expense-title" name="title" placeholder="Titre" required>
        <input type="number" id="expense-amount" name="amount" placeholder="Montant" required>
        <input type="date" id="expense-date" name="date" required>
        <input type="text" id="expense-category" name="category" placeholder="Catégorie" required>
        <input type="text" id="expense-users" name="users" placeholder="IDs des utilisateurs concernés (ex: 1,2)" required>
        <input type="file" id="expense-receipt" name="receipt" accept=".pdf,image/*">
        <button type="submit">Créer la dépense</button>
    </form>
    <p id="expense-result"></p>

    <div id="group-expenses"></div>
    <div id="group-balances"></div>

    <script>
        const token = localStorage.getItem('jwt');
        const groupId = {{ groupId }};

        if (!token) {
            window.location.href = '/login';
        } else {
            Promise.all([
                fetch(`http://localhost:49162/api/groups/${groupId}`, {
                    headers: { 'Authorization': 'Bearer ' + token }
                }).then(r => r.json()),

                fetch(`http://localhost:49162/api/groups/${groupId}/role`, {
                    headers: { 'Authorization': 'Bearer ' + token }
                }).then(r => r.json()),

                fetch(`http://localhost:49162/api/groups/${groupId}/members`, {
                    headers: { 'Authorization': 'Bearer ' + token }
                }).then(r => r.json()),

                fetch(`http://localhost:49162/api/groups/${groupId}/expenses`, {
                    headers: { 'Authorization': 'Bearer ' + token }
                }).then(r => r.json()),

                fetch(`http://localhost:49162/api/groups/${groupId}/balances`, {
                    headers: { 'Authorization': 'Bearer ' + token }
                }).then(r => r.json())
            ])
            .then(([group, role, members, expenses, balances]) => {
                // Infos groupe
                document.getElementById('group-info').innerHTML = `
                    <h2>${group.name}</h2>
                    <p>Créé le : ${group.createdAt}</p>
                    <p>Créé par : ${group.createdBy.username} (${group.createdBy.email})</p>
                `;

                // Rôle
                document.getElementById('group-role').innerHTML = `<strong>Mon rôle :</strong> ${role.role}`;

                // Membres
                const memberHTML = members.map(m => `<li><strong>${m.username}</strong> (${m.email}) - <em>${m.role}</em></li>`).join('');
                document.getElementById('group-members').innerHTML = `<h3>Membres :</h3><ul>${memberHTML}</ul>`;

                // Dépenses
                const expenseContainer = document.getElementById('group-expenses');
                if (!expenses.length) {
                    expenseContainer.innerHTML = '<h3>Aucune dépense pour ce groupe.</h3>';
                } else {
                    const expenseHTML = expenses.map(e => `
                        <li>
                            <strong>${e.title}</strong> - ${e.amount} €<br>
                            Catégorie : ${e.category}<br>
                            Date : ${e.date}<br>
                            Payé par : ${e.paidBy}<br>
                            Participants : ${e.concernedUsers.join(', ')}
                        </li><br>
                    `).join('');
                    expenseContainer.innerHTML = `<h3>Dépenses :</h3><ul>${expenseHTML}</ul>`;
                }

                // Soldes
                const balanceHTML = Object.entries(balances).map(
                    ([userId, balance]) => `<li>User ID ${userId} : ${parseFloat(balance).toFixed(2)} €</li>`
                ).join('');
                document.getElementById('group-balances').innerHTML = `<h3>Soldes :</h3><ul>${balanceHTML}</ul>`;
            })
            .catch(error => {
                console.error("Erreur lors du chargement des infos du groupe :", error);
                alert("Erreur lors du chargement des données du groupe.");
            });

            // Soumission d'une nouvelle dépense
            
            document.getElementById('expense-form').addEventListener('submit', function (e) {
                e.preventDefault();

                const form = new FormData();
                form.append('title', document.getElementById('expense-title').value.trim());
                form.append('amount', document.getElementById('expense-amount').value);
                form.append('date', document.getElementById('expense-date').value);
                form.append('category', document.getElementById('expense-category').value.trim());
                form.append('group_id', groupId);

                const users = document.getElementById('expense-users').value
                    .split(',')
                    .map(id => parseInt(id.trim()))
                    .filter(Boolean);
                form.append('concerned_user_ids', JSON.stringify(users));

                const file = document.getElementById('expense-receipt').files[0];
                if (file) {
                    form.append('receipt', file);
                }

                fetch('http://localhost:49162/api/expenses', {
                    method: 'POST',
                    headers: {
                        'Authorization': 'Bearer ' + token
                    },
                    body: form
                }).then(async res => {
                    const msg = await res.json();
                    document.getElementById('expense-result').textContent = msg.message || msg.error;
                    if (res.ok) {
                        location.reload();
                    }
                });
            });


        }
    </script>

</body>
</html>
